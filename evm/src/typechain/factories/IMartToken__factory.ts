/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { IMartToken, IMartTokenInterface } from "../IMartToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003635762001c8b803803806200001d8162000368565b9283398101604082820312620003635781516001600160401b0392908381116200036357826200004f9183016200038e565b906020928382015185811162000363576200006b92016200038e565b9281518181116200034d576000938454916001948584811c9416801562000342575b838510146200032e578190601f94858111620002db575b508390858311600114620002775788926200026b575b5050600019600383901b1c191690851b1785555b8551928311620002575783548481811c911680156200024c575b828210146200023857828111620001f0575b50809183116001146200018a57508394829394926200017e575b5050600019600383901b1c191690821b1790555b600b8054336001600160a01b031982168117909255604051926001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361188a9081620004018239f35b01519050388062000114565b90601f198316958486528286209286905b888210620001d85750508385969710620001be575b505050811b01905562000128565b015160001960f88460031b161c19169055388080620001b0565b8087859682949686015181550195019301906200019b565b8486528186208380860160051c8201928487106200022e575b0160051c019085905b82811062000222575050620000fa565b87815501859062000212565b9250819262000209565b634e487b7160e01b86526022600452602486fd5b90607f1690620000e8565b634e487b7160e01b85526041600452602485fd5b015190503880620000ba565b8880528489208894509190601f1984168a5b87828210620002c45750508411620002aa575b505050811b018555620000ce565b015160001960f88460031b161c191690553880806200029c565b8385015186558b9790950194938401930162000289565b9091508780528388208580850160051c82019286861062000324575b918991869594930160051c01915b82811062000315575050620000a4565b8a815585945089910162000305565b92508192620002f7565b634e487b7160e01b87526022600452602487fd5b93607f16936200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200034d57604052565b919080601f84011215620003635782516001600160401b0381116200034d57602090620003c4601f8201601f1916830162000368565b92818452828287010111620003635760005b818110620003ec57508260009394955001015290565b8581018301518482018401528201620003d656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610ea55750806306fdde0314610dfd578063081812fc14610ddd578063095ea7b314610c7057806318160ddd14610c5157806323b872dd14610c2c5780632f745c5914610b8057806342842e0e14610b4c5780634f6ccce714610ab95780636352211e14610a8857806370a0823114610a5b578063715018a6146109fe57806373ad6c2d146109be5780638da5cb5b1461099557806395d89b41146108b2578063a22cb465146107eb578063b88d4fde14610762578063c87b56dd14610654578063d204c45e14610225578063e985e9c5146101d35763f2fde38b1461010a57600080fd5b346101cf5760203660031901126101cf57610123610f6b565b9061012c611078565b6001600160a01b0391821692831561017d575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461022157806003193601126102215760ff816020936101f3610f6b565b6101fb610f86565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b50823461065157826003193601126106515761023f610f6b565b9260249267ffffffffffffffff91843583811161064d573660238201121561064d5761027390369087818601359101611041565b91600c54600193848201600c5583519561028c87610fd1565b8787526001600160a01b038a811697909390881561060b57600998999a9b6102d26102cc84600052600260205260018060a01b0360406000205416151590565b15611808565b600854838d5260209a8b52888d20819055600160401b8110156105f95791836103d0928e9f9e8e83918f8f908f91600292610334876103198e6103d59f86016008556117bb565b90919082549060031b600019811b9283911b16911916179055565b61033d886110d0565b8686526006845281862081875284528186208890558786526007845281862055600087815260026020526040902054610380906001600160a01b031615156102cc565b85855260038352842080549091019055848352528d812080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611614565b6112e6565b6000818152600260205260409020546001600160a01b0316156105a0578a52600a8752848a2091805191821161058e57819061041184546111b9565b601f811161053e575b508890601f83116001146104df578c926104d4575b5050600019600383901b1c191690861b1790555b600d541695868614610498575050838652600583528086208587528352808620805460ff191683179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319190a380f35b60199085606494519362461bcd60e51b85528401528201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b015190508b8061042f565b848d52898d208994509190601f1984168e5b8c828210610528575050841161050f575b505050811b019055610443565b015160001960f88460031b161c191690558b8080610502565b8385015186558c979095019493840193016104f1565b909150838c52888c20601f840160051c8101918a8510610584575b84939291601f8b920160051c01915b82811061057657505061041a565b8e81558594508a9101610568565b9091508190610559565b634e487b7160e01b8b5260418552898bfd5b855162461bcd60e51b8152808601899052602e818c01527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fd5b634e487b7160e01b8d52604188528d8dfd5b865162461bcd60e51b81526020818801819052818d01527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b8480fd5b80fd5b5090346101cf576020918260031936011261075e573560008181526002602052604090205461068d906001600160a01b03161515611147565b8352600a82528083209281518094829080546106a8816111b9565b918285526001918883821691826000146107375750506001146106f9575b5050506106f59392916106da910386611003565b81516106e581610fd1565b5251928284938452830190610f2b565b0390f35b8552868520879350859291905b82841061071f57505050820101816106da6106f56106c6565b8054848b018601528995508894909301928101610706565b60ff19168782015293151560051b860190930193508492506106da91506106f590506106c6565b8380fd5b8382346102215760803660031901126102215761077d610f6b565b90610786610f86565b916044356064359367ffffffffffffffff85116107e757366023860112156107e7576107c16103d0948660246107e498369301359101611041565b926107d46107cf843361130a565b611231565b6107df8383836113d2565b611730565b80f35b8580fd5b5090346101cf57806003193601126101cf57610805610f6b565b906024359182151580930361064d576001600160a01b0316923384146108745750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b5050346102215781600319360112610221578051908260018054916108d6836111b9565b8086529282811690811561096d5750600114610911575b5050506108ff826106f5940383611003565b51918291602083526020830190610f2b565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610955575050506108ff8260206106f595820101946108ed565b80546020878701810191909152909501948101610938565b6106f59750869350602092506108ff94915060ff191682840152151560051b820101946108ed565b505034610221578160031936011261022157600b5490516001600160a01b039091168152602090f35b8334610651576020366003190112610651576109d8610f6b565b6109e0611078565b60018060a01b03166001600160601b0360a01b600d541617600d5580f35b8334610651578060031936011261065157610a17611078565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461022157602036600319011261022157602090610a81610a7c610f6b565b6110d0565b9051908152f35b5091346106515760203660031901126106515750610aa860209235611193565b90516001600160a01b039091168152f35b5082346106515760203660031901126106515750803590600854821015610af457602083610ae6846117bb565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b505034610221576103d06107e491610b6336610f9c565b91925192610b7084610fd1565b8684526107d46107cf843361130a565b509134610651578160031936011261065157610b9a610f6b565b60243590610ba7816110d0565b821015610bd5576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b8334610651576107e4610c3e36610f9c565b91610c4c6107cf843361130a565b6113d2565b5050346102215781600319360112610221576020906008549051908152f35b50346101cf57816003193601126101cf57610c89610f6b565b6024359290916001600160a01b0391908280610ca487611193565b16941693808514610d9057803314908115610d71575b5015610d0957848652602052842080546001600160a01b03191683179055610ce183611193565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541638610cba565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346106515760203660031901126106515750610aa8602092356111f3565b505034610221578160031936011261022157805190828054610e1e816111b9565b8085529160019180831690811561096d5750600114610e49575050506108ff826106f5940383611003565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610e8d575050506108ff8260206106f595820101946108ed565b80546020878701810191909152909501948101610e70565b925050346101cf5760203660031901126101cf573563ffffffff60e01b81168091036101cf576020925063780e9d6360e01b8114908115610ee8575b5015158152f35b6380ac58cd60e01b811491508115610f1a575b8115610f09575b5038610ee1565b6301ffc9a760e01b14905038610f02565b635b5e139f60e01b81149150610efb565b919082519283825260005b848110610f57575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610f36565b600435906001600160a01b0382168203610f8157565b600080fd5b602435906001600160a01b0382168203610f8157565b6060906003190112610f81576001600160a01b03906004358281168103610f8157916024359081168103610f81579060443590565b6020810190811067ffffffffffffffff821117610fed57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610fed57604052565b67ffffffffffffffff8111610fed57601f01601f191660200190565b92919261104d82611025565b9161105b6040519384611003565b829481845281830111610f81578281602093846000960137010152565b600b546001600160a01b0316330361108c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b031680156110f057600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b1561114e57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b03166111b6811515611147565b90565b90600182811c921680156111e9575b60208310146111d357565b634e487b7160e01b600052602260045260246000fd5b91607f16916111c8565b600081815260026020526040902054611216906001600160a01b03161515611147565b6000908152600460205260409020546001600160a01b031690565b1561123857565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b156112ed57565b60405162461bcd60e51b81528061130660048201611293565b0390fd5b906001600160a01b03808061131e84611193565b16931691838314938415611351575b50831561133b575b50505090565b611347919293506111f3565b1614388080611335565b909350600052600560205260406000208260005260205260ff60406000205416923861132d565b1561137f57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b6113f6916113df84611193565b6001600160a01b0393848416939185168414611378565b8382169384156115c35783918261150a575090506008549085600052600960205281604060002055600160401b821015610fed5761145c92611443876103198560018997016008556117bb565b8286036114d7575b5061145586611193565b1614611378565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60008481526004602052604081206001600160601b0360a01b9081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b6114e0906110d0565b6040600087815260066020528181208382526020528882822055888152600760205220553861144b565b85830361151c575b5061145c92611443565b6115279192506110d0565b6000198101919082116115ad5761145c9284926000908882526020906007825260409182842054828103611576575b508a84528383812055868452600681528284209184525281205592611512565b8785526006825283852083865282528385205488865260068352848620828752835280858720558552600782528385205538611556565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b1561172657611662946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610f2b565b03926001600160a01b03165af18491816116e6575b506116d5575050503d6000146116cd573d61169181611025565b9061169f6040519283611003565b81528091833d92013e5b805191826116ca5760405162461bcd60e51b81528061130660048201611293565b01fd5b5060606116a9565b6001600160e01b0319161492509050565b9091508581813d831161171f575b6116fe8183611003565b8101031261064d57516001600160e01b03198116810361064d579038611677565b503d6116f4565b5050915050600190565b9293600093909291803b156117b05794849161178a9660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610f2b565b0393165af18491816116e657506116d5575050503d6000146116cd573d61169181611025565b505050915050600190565b6008548110156117f25760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b1561180f57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fdfea26469706673582212201e716887c1bce487b44329f8944eb7a1b7035be8bc50b914c21aef187024de5c64736f6c63430008110033";

type IMartTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IMartTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IMartToken__factory extends ContractFactory {
  constructor(...args: IMartTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IMartToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<IMartToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): IMartToken {
    return super.attach(address) as IMartToken;
  }
  override connect(signer: Signer): IMartToken__factory {
    return super.connect(signer) as IMartToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMartTokenInterface {
    return new utils.Interface(_abi) as IMartTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMartToken {
    return new Contract(address, _abi, signerOrProvider) as IMartToken;
  }
}
