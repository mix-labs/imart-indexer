/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { IMartToken, IMartTokenInterface } from "../IMartToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003635762001c04803803806200001d8162000368565b9283398101604082820312620003635781516001600160401b0392908381116200036357826200004f9183016200038e565b906020928382015185811162000363576200006b92016200038e565b9281518181116200034d576000938454916001948584811c9416801562000342575b838510146200032e578190601f94858111620002db575b508390858311600114620002775788926200026b575b5050600019600383901b1c191690851b1785555b8551928311620002575783548481811c911680156200024c575b828210146200023857828111620001f0575b50809183116001146200018a57508394829394926200017e575b5050600019600383901b1c191690821b1790555b600b8054336001600160a01b031982168117909255604051926001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36118039081620004018239f35b01519050388062000114565b90601f198316958486528286209286905b888210620001d85750508385969710620001be575b505050811b01905562000128565b015160001960f88460031b161c19169055388080620001b0565b8087859682949686015181550195019301906200019b565b8486528186208380860160051c8201928487106200022e575b0160051c019085905b82811062000222575050620000fa565b87815501859062000212565b9250819262000209565b634e487b7160e01b86526022600452602486fd5b90607f1690620000e8565b634e487b7160e01b85526041600452602485fd5b015190503880620000ba565b8880528489208894509190601f1984168a5b87828210620002c45750508411620002aa575b505050811b018555620000ce565b015160001960f88460031b161c191690553880806200029c565b8385015186558b9790950194938401930162000289565b9091508780528388208580850160051c82019286861062000324575b918991869594930160051c01915b82811062000315575050620000a4565b8a815585945089910162000305565b92508192620002f7565b634e487b7160e01b87526022600452602487fd5b93607f16936200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200034d57604052565b919080601f84011215620003635782516001600160401b0381116200034d57602090620003c4601f8201601f1916830162000368565b92818452828287010111620003635760005b818110620003ec57508260009394955001015290565b8581018301518482018401528201620003d656fe6080604081815260048036101561001557600080fd5b600092833560e01c9081629a9b7b14610e5a5750806301ffc9a714610dd057806306fdde0314610d49578063081812fc14610d29578063095ea7b314610bbc57806318160ddd14610b9d57806323b872dd14610b785780632f745c5914610acc57806342842e0e14610a985780634f6ccce714610a055780636352211e146109d457806370a08231146109a7578063715018a61461095c57806373ad6c2d146109175780638da5cb5b146108ee57806395d89b411461082c578063a22cb46514610777578063b88d4fde146106ee578063c87b56dd146105f2578063d204c45e1461021c578063e985e9c5146101ca5763f2fde38b1461011457600080fd5b346101c65760203660031901126101c65761012d610eb6565b90610136610fc2565b6001600160a01b03918216928315610174575050600b80546001600160a01b0319811684179091551660008051602061178e8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461021857806003193601126102185760ff816020936101ea610eb6565b6101f2610ed1565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5082346105ef57826003193601126105ef57610236610eb6565b926024926001600160401b039184358381116105eb57366023820112156105eb5761026990369087818601359101610f8b565b91610272610fc2565b60019283600c54019081600c5583519561028b87610f1c565b8787526001600160a01b038a81169790939088156105a957600998999a9b6102bb6102b58461152d565b15611722565b600854838d5260209a8b52888d20819055600160401b81101561059757918361038f928e9f9e8e83918f8f908f9160029261031d876103028e6103949f86016008556116f1565b90919082549060031b600019811b9283911b16911916179055565b6103268861101a565b868652600684528186208187528452878287205587865260078452818620556103516102b58861152d565b85855260038352842080549091019055848352528d812080546001600160a01b031916831790556000805160206117ae8339815191528180a461154a565b611214565b61039d8161152d565b1561053e578a52600a8752848a2091805191821161052c5781906103c184546110fe565b601f81116104dc575b508890601f831160011461047d578c92610472575b5050600019600383901b1c191690861b1790555b600d541695868614610436575050838652600583528086208587528352808620805460ff1916831790555190815260008051602061176e8339815191529190a380f35b60199085606494519362461bcd60e51b85528401528201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b015190508b806103df565b848d52898d208994509190601f1984168e5b8c8282106104c657505084116104ad575b505050811b0190556103f3565b015160001960f88460031b161c191690558b80806104a0565b8385015186558c9790950194938401930161048f565b909150838c52888c20601f840160051c8101918a8510610522575b84939291601f8b920160051c01915b8281106105145750506103ca565b8e81558594508a9101610506565b90915081906104f7565b634e487b7160e01b8b5260418552898bfd5b855162461bcd60e51b8152808601899052602e818c01527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fd5b634e487b7160e01b8d52604188528d8dfd5b865162461bcd60e51b81526020818801819052818d01527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b8480fd5b80fd5b5090346101c657602091826003193601126106ea57356106196106148261152d565b611091565b8352600a8252808320928151809482908054610634816110fe565b918285526001918883821691826000146106c3575050600114610685575b505050610681939291610666910386610f4d565b815161067181610f1c565b5251928284938452830190610e76565b0390f35b8552868520879350859291905b8284106106ab5750505082010181610666610681610652565b8054848b018601528995508894909301928101610692565b60ff19168782015293151560051b8601909301935084925061066691506106819050610652565b8380fd5b83823461021857608036600319011261021857610709610eb6565b90610712610ed1565b6064359290604435906001600160401b03851161077357366023860112156107735761074d61038f9486602461077098369301359101610f8b565b9261076061075b8433611238565b61115f565b61076b838383611300565b611666565b80f35b8580fd5b5090346101c657806003193601126101c657610791610eb6565b90602435918215158093036105eb576001600160a01b0316923384146107ee5750338452600560205280842083855260205280842060ff1981541660ff84161790555190815260008051602061176e83398151915260203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b505034610218578160031936011261021857805190826001805490610850826110fe565b808652918181169081156108c6575060011461088b575b50505061087982610681940383610f4d565b51918291602083526020830190610e76565b80955082526020948583205b8284106108b35750505082610681946108799282010194610867565b8054868501880152928601928101610897565b61068197506108799450602092508693915060ff191682840152151560051b82010194610867565b505034610218578160031936011261021857600b5490516001600160a01b039091168152602090f35b83346105ef5760203660031901126105ef57610931610eb6565b610939610fc2565b600d80546001600160a01b0319166001600160a01b039290921691909117905580f35b83346105ef57806003193601126105ef57610975610fc2565b600b80546001600160a01b0319811690915581906001600160a01b031660008051602061178e8339815191528280a380f35b505034610218576020366003190112610218576020906109cd6109c8610eb6565b61101a565b9051908152f35b5091346105ef5760203660031901126105ef57506109f4602092356110d8565b90516001600160a01b039091168152f35b5082346105ef5760203660031901126105ef5750803590600854821015610a4057602083610a32846116f1565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b5050346102185761038f61077091610aaf36610ee7565b91925192610abc84610f1c565b86845261076061075b8433611238565b5091346105ef57816003193601126105ef57610ae6610eb6565b60243590610af38161101a565b821015610b21576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b83346105ef57610770610b8a36610ee7565b91610b9861075b8433611238565b611300565b5050346102185781600319360112610218576020906008549051908152f35b50346101c657816003193601126101c657610bd5610eb6565b6024359290916001600160a01b0391908280610bf0876110d8565b16941693808514610cdc57803314908115610cbd575b5015610c5557848652602052842080546001600160a01b03191683179055610c2d836110d8565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541638610c06565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346105ef5760203660031901126105ef57506109f460209235611138565b505034610218578160031936011261021857805190828054610d6a816110fe565b808552906001908181169081156108c65750600114610d955750505061087982610681940383610f4d565b94508180526020948583205b828410610dbd5750505082610681946108799282010194610867565b8054868501880152928601928101610da1565b50346101c65760203660031901126101c657359063ffffffff60e01b82168092036101c6576020925063780e9d6360e01b8214918215610e14575b50519015158152f35b9091506380ac58cd60e01b8114908115610e49575b8115610e38575b509038610e0b565b6301ffc9a760e01b14905038610e30565b635b5e139f60e01b81149150610e29565b849034610218578160031936011261021857602090600c548152f35b919082519283825260005b848110610ea2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e81565b600435906001600160a01b0382168203610ecc57565b600080fd5b602435906001600160a01b0382168203610ecc57565b6060906003190112610ecc576001600160a01b03906004358281168103610ecc57916024359081168103610ecc579060443590565b602081019081106001600160401b03821117610f3757604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610f3757604052565b6001600160401b038111610f3757601f01601f191660200190565b929192610f9782610f70565b91610fa56040519384610f4d565b829481845281830111610ecc578281602093846000960137010152565b600b546001600160a01b03163303610fd657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0316801561103a57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b1561109857565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b03166110fb811515611091565b90565b90600182811c9216801561112e575b602083101461111857565b634e487b7160e01b600052602260045260246000fd5b91607f169161110d565b6111446106148261152d565b6000908152600460205260409020546001600160a01b031690565b1561116657565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561121b57565b60405162461bcd60e51b815280611234600482016111c1565b0390fd5b906001600160a01b03808061124c846110d8565b1693169183831493841561127f575b508315611269575b50505090565b61127591929350611138565b1614388080611263565b909350600052600560205260406000208260005260205260ff60406000205416923861125b565b156112ad57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b6113249161130d846110d8565b6001600160a01b03938484169391851684146112a6565b8382169384156114dc57839182611423575060085460008781526009602052604090208190559150600160401b821015610f375761138a92611371876103028560018997016008556116f1565b8286036113f0575b50611383866110d8565b16146112a6565b6000805160206117ae833981519152600084815260046020526040812060018060a01b03199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b6113f99061101a565b60406000878152600660205281812083825260205288828220558881526007602052205538611379565b858303611435575b5061138a92611371565b61144091925061101a565b6000198101919082116114c65761138a928492600090888252602090600782526040918284205482810361148f575b508a8452838381205586845260068152828420918452528120559261142b565b878552600682528385208386528252838520548886526006835284862082875283528085872055855260078252838520553861146f565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6000908152600260205260409020546001600160a01b0316151590565b9192600092909190803b1561165c57611598946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610e76565b03926001600160a01b03165af184918161161c575b5061160b575050503d600014611603573d6115c781610f70565b906115d56040519283610f4d565b81528091833d92013e5b805191826116005760405162461bcd60e51b815280611234600482016111c1565b01fd5b5060606115df565b6001600160e01b0319161492509050565b9091508581813d8311611655575b6116348183610f4d565b810103126105eb57516001600160e01b0319811681036105eb5790386115ad565b503d61162a565b5050915050600190565b9293600093909291803b156116e6579484916116c09660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610e76565b0393165af184918161161c575061160b575050503d600014611603573d6115c781610f70565b505050915050600190565b60085481101561170c57600860005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561172957565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fdfe17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b12eabd260b96f359dd0ccbfc2110734e9805ca4b2e2fc69ddfbc6d53b67740164736f6c63430008110033";

type IMartTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IMartTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IMartToken__factory extends ContractFactory {
  constructor(...args: IMartTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IMartToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<IMartToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): IMartToken {
    return super.attach(address) as IMartToken;
  }
  override connect(signer: Signer): IMartToken__factory {
    return super.connect(signer) as IMartToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMartTokenInterface {
    return new utils.Interface(_abi) as IMartTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMartToken {
    return new Contract(address, _abi, signerOrProvider) as IMartToken;
  }
}
