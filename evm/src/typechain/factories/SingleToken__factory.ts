/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SingleToken, SingleTokenInterface } from "../SingleToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "assignOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003505762001c79803803806200001d8162000355565b928339810190604081830312620003505780516001600160401b0391908281116200035057836200005091830162000391565b906020938482015184811162000350576200006c920162000391565b60008054336001600160a01b031982168117835591939291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a38151928484116200025a576001938454938585811c9516801562000345575b8886101462000331578190601f95868111620002de575b5088908683116001146200027a5784926200026e575b5050600019600383901b1c191690851b1784555b81519485116200025a576002548481811c911680156200024f575b878210146200023b57838111620001f2575b5085928511600114620001895793945084929190836200017d575b50501b916000199060031b1c1916176002555b6040516118759081620004048239f35b0151925038806200015a565b6002815285812093958591601f198316915b88838310620001d75750505010620001bd575b505050811b016002556200016d565b015160001960f88460031b161c19169055388080620001ae565b8587015188559096019594850194879350908101906200019b565b600282528682208480880160051c82019289891062000231575b0160051c019085905b828110620002255750506200013f565b83815501859062000215565b925081926200020c565b634e487b7160e01b82526022600452602482fd5b90607f16906200012d565b634e487b7160e01b81526041600452602490fd5b015190503880620000fe565b8785528985208894509190601f198416865b8c828210620002c75750508411620002ad575b505050811b01845562000112565b015160001960f88460031b161c191690553880806200029f565b8385015186558b979095019493840193016200028c565b9091508684528884208680850160051c8201928b861062000327575b918991869594930160051c01915b82811062000318575050620000e8565b86815585945089910162000308565b92508192620002fa565b634e487b7160e01b83526022600452602483fd5b94607f1694620000d1565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200037b57604052565b634e487b7160e01b600052604160045260246000fd5b919080601f84011215620003505782516001600160401b0381116200037b57602090620003c7601f8201601f1916830162000355565b92818452828287010111620003505760005b818110620003ef57508260009394955001015290565b8581018301518482018401528201620003d956fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610e2d57508063047fc9aa14610bf757806306fdde0314610da6578063081812fc14610d86578063095ea7b314610c1657806318160ddd14610bf757806323b872dd14610bd25780632f745c5914610b265780633540302314610b0657806342842e0e14610ad25780634f6ccce714610a3f5780636352211e14610a0e57806370a08231146109e1578063715018a61461099957806373ad6c2d146109545780637f12caaa146109295780638da5cb5b1461090157806395d89b4114610820578063a22cb46514610767578063b88d4fde146106e1578063c87b56dd146105e9578063cd279c7c14610211578063e985e9c5146101bf5763f2fde38b1461012b57600080fd5b346101bb5760203660031901126101bb57610144610ef3565b9161014d610fff565b6001600160a01b03831615610169578361016684611057565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461020d578060031936011261020d5760ff816020936101df610ef3565b6101e7610f0e565b6001600160a01b0391821683526006875283832091168252855220549151911615158152f35b5080fd5b5082346105e65760603660031901126105e65761022c610ef3565b92604435926001600160401b03918285116105e257366023860112156105e257610260602495369087818601359101610fc8565b91610269610fff565b60019283600c54019081600c5583519561028287610f59565b8787526001600160a01b038a81169790939088156105a057600a98999a9b6102b26102ac8461159f565b15611794565b600954838d5260209a8b52888d20819055600160401b81101561058e579183610386928e9f9e8e83918f8f908f918f92600393610316886102fb61038b9f868101600955611763565b90919082549060031b600019811b9283911b16911916179055565b61031f8961108c565b8787526007855282872081885285528883882055888752600885528287205561034a6102ac8961159f565b8686528352842080549091019055848352528d812080546001600160a01b031916831790556000805160206118208339815191528180a46115bc565b611286565b6103948161159f565b15610535578a52600b8752848a209180519182116105235781906103b88454611170565b601f81116104d3575b508890601f8311600114610474578c92610469575b5050600019600383901b1c191690861b1790555b600d54169586861461042d575050838652600683528086208587528352808620805460ff191683179055519081526000805160206117e08339815191529190a380f35b60199085606494519362461bcd60e51b85528401528201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b015190508b806103d6565b848d52898d208994509190601f1984168e5b8c8282106104bd57505084116104a4575b505050811b0190556103ea565b015160001960f88460031b161c191690558b8080610497565b8385015186558c97909501949384019301610486565b909150838c52888c20601f840160051c8101918a8510610519575b84939291601f8b920160051c01915b82811061050b5750506103c1565b8e81558594508a91016104fd565b90915081906104ee565b634e487b7160e01b8b5260418552898bfd5b855162461bcd60e51b8152808601899052602e818c01527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fd5b634e487b7160e01b8d52604188528d8dfd5b865162461bcd60e51b81526020818801819052818d01527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b8380fd5b80fd5b5090346101bb57602091826003193601126105e2573561061061060b8261159f565b611103565b8352600b825280832092815180948290805461062b81611170565b918285526001918883821691826000146106ba57505060011461067c575b50505061067893929161065d910386610f8a565b815161066881610f59565b5251928284938452830190610eb3565b0390f35b8552868520879350859291905b8284106106a2575050508201018161065d610678610649565b8054848b018601528995508894909301928101610689565b60ff19168782015293151560051b8601909301935084925061065d91506106789050610649565b83823461020d57608036600319011261020d576106fc610ef3565b90610705610f0e565b6064359290604435906001600160401b0385116107635736602386011215610763576107406103869486602461016698369301359101610fc8565b9261075361074e84336112aa565b6111d1565b61075e838383611372565b6116d8565b8580fd5b5090346101bb57806003193601126101bb57610781610ef3565b906024359182151580930361081c576001600160a01b0316923384146107de5750338452600660205280842083855260205280842060ff1981541660ff8416179055519081526000805160206117e083398151915260203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b8480fd5b50503461020d578160031936011261020d578051908260025461084281611170565b808552906001908181169081156108d95750600114610880575b50505061086e82610678940383610f8a565b51918291602083526020830190610eb3565b60028352602095507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106108c657505050826106789461086e928201019461085c565b80548685018801529286019281016108aa565b610678975061086e9450602092508693915060ff191682840152151560051b8201019461085c565b50503461020d578160031936011261020d57905490516001600160a01b039091168152602090f35b50346101bb5760203660031901126101bb57610943610ef3565b9161094c610fff565b61014d610fff565b83346105e65760203660031901126105e65761096e610ef3565b610976610fff565b600d80546001600160a01b0319166001600160a01b039290921691909117905580f35b83346105e657806003193601126105e6576109b2610fff565b80546001600160a01b03198116825581906001600160a01b03166000805160206118008339815191528280a380f35b50503461020d57602036600319011261020d57602090610a07610a02610ef3565b61108c565b9051908152f35b5091346105e65760203660031901126105e65750610a2e6020923561114a565b90516001600160a01b039091168152f35b5082346105e65760203660031901126105e65750803590600954821015610a7a57602083610a6c84611763565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b50503461020d5761038661016691610ae936610f24565b91925192610af684610f59565b86845261075361074e84336112aa565b50503461020d57602036600319011261020d576020906009549051908152f35b5091346105e657816003193601126105e657610b40610ef3565b60243590610b4d8161108c565b821015610b7b576001600160a01b031682526007602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b83346105e657610166610be436610f24565b91610bf261074e84336112aa565b611372565b50503461020d578160031936011261020d576020906009549051908152f35b50346101bb57816003193601126101bb57610c2f610ef3565b6024359290916001600160a01b0391908280610c4a8761114a565b16941693808514610d3957803314908115610d1a575b5015610cb257508385526005602052842080546001600160a01b03191683179055610c8a8361114a565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600660205281862033875260205260ff828720541638610c60565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346105e65760203660031901126105e65750610a2e602092356111aa565b50503461020d578160031936011261020d57805190826001805490610dca82611170565b808652918181169081156108d95750600114610df25750505061086e82610678940383610f8a565b80955082526020948583205b828410610e1a57505050826106789461086e928201019461085c565b8054868501880152928601928101610dfe565b925050346101bb5760203660031901126101bb573563ffffffff60e01b81168091036101bb576020925063780e9d6360e01b8114908115610e70575b5015158152f35b6380ac58cd60e01b811491508115610ea2575b8115610e91575b5038610e69565b6301ffc9a760e01b14905038610e8a565b635b5e139f60e01b81149150610e83565b919082519283825260005b848110610edf575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ebe565b600435906001600160a01b0382168203610f0957565b600080fd5b602435906001600160a01b0382168203610f0957565b6060906003190112610f09576001600160a01b03906004358281168103610f0957916024359081168103610f09579060443590565b602081019081106001600160401b03821117610f7457604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610f7457604052565b6001600160401b038111610f7457601f01601f191660200190565b929192610fd482610fad565b91610fe26040519384610f8a565b829481845281830111610f09578281602093846000960137010152565b6000546001600160a01b0316330361101357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080546001600160a01b039283166001600160a01b03198216811783559216906000805160206118008339815191529080a3565b6001600160a01b031680156110ac57600052600460205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b1561110a57565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600360205260409020546001600160a01b031661116d811515611103565b90565b90600182811c921680156111a0575b602083101461118a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161117f565b6111b661060b8261159f565b6000908152600560205260409020546001600160a01b031690565b156111d857565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561128d57565b60405162461bcd60e51b8152806112a660048201611233565b0390fd5b906001600160a01b0380806112be8461114a565b169316918383149384156112f1575b5083156112db575b50505090565b6112e7919293506111aa565b16143880806112d5565b909350600052600660205260406000208260005260205260ff6040600020541692386112cd565b1561131f57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b6113969161137f8461114a565b6001600160a01b0393848416939185168414611318565b83821693841561154e5783918261149557506009546000878152600a602052604090208190559150600160401b821015610f74576113fc926113e3876102fb856001899701600955611763565b828603611462575b506113f58661114a565b1614611318565b600080516020611820833981519152600084815260056020526040812060018060a01b03199081815416905583825260046020526040822060001981540190558482526040822060018154019055858252600360205284604083209182541617905580a4565b61146b9061108c565b604060008781526007602052818120838252602052888282205588815260086020522055386113eb565b8583036114a7575b506113fc926113e3565b6114b291925061108c565b600019810191908211611538576113fc9284926000908882526020906008825260409182842054828103611501575b508a8452838381205586845260078152828420918452528120559261149d565b87855260078252838520838652825283852054888652600783528486208287528352808587205585526008825283852055386114e1565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6000908152600360205260409020546001600160a01b0316151590565b9192600092909190803b156116ce5761160a946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610eb3565b03926001600160a01b03165af184918161168e575b5061167d575050503d600014611675573d61163981610fad565b906116476040519283610f8a565b81528091833d92013e5b805191826116725760405162461bcd60e51b8152806112a660048201611233565b01fd5b506060611651565b6001600160e01b0319161492509050565b9091508581813d83116116c7575b6116a68183610f8a565b8101031261081c57516001600160e01b03198116810361081c57903861161f565b503d61169c565b5050915050600190565b9293600093909291803b15611758579484916117329660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610eb3565b0393165af184918161168e575061167d575050503d600014611675573d61163981610fad565b505050915050600190565b60095481101561177e57600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561179b57565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fdfe17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ab8e1761522c94c0ed3c5fe3f86553425e83389d59b7e40324b8f5673872eb4a64736f6c63430008110033";

type SingleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SingleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SingleToken__factory extends ContractFactory {
  constructor(...args: SingleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SingleToken> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<SingleToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): SingleToken {
    return super.attach(address) as SingleToken;
  }
  override connect(signer: Signer): SingleToken__factory {
    return super.connect(signer) as SingleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SingleTokenInterface {
    return new utils.Interface(_abi) as SingleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleToken {
    return new Contract(address, _abi, signerOrProvider) as SingleToken;
  }
}
