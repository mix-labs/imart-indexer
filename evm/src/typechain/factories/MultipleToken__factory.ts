/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MultipleToken, MultipleTokenInterface } from "../MultipleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "assignOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012257602081016001600160401b038111828210176200010c576040526000908190528054336001600160a01b0319821681178355906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a36003546001908181811c9116801562000101575b6020821014620000ed57601f8111620000a3575b82600355604051611ace9081620001288239f35b60038352601f0160051c7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b908101905b818110620000e257506200008f565b8381558201620000d3565b634e487b7160e01b83526022600452602483fd5b90607f16906200007b565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c8062fdd58e1461131157806301ffc9a714611287578063047fc9aa146112685780630e89341c146111395780632eb2c2d614610d8657806335403023146109db5780634e1273f414610bea5780634f558e7914610bc2578063715018a614610b7a57806373ad6c2d14610b325780637f12caaa14610b075780638da5cb5b14610adf578063a22cb46514610a26578063bc197c8114610a01578063bd85b039146109db578063cd279c7c14610554578063e985e9c5146104fb578063f23a6e61146104d6578063f242432a146101905763f2fde38b146100fc57600080fd5b3461018c57602036600319011261018c57610115611341565b9161011e6115b5565b6001600160a01b0383161561013a57836101378461160d565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b508290346104d2576101a136611560565b9196936001600160a01b03908116919033831480156104b3575b6101c490611716565b84168015986101d38a15611779565b6101dc81611989565b6101e584611989565b9a851561045a575b6103a7575b5088995080899697989952602096600188528887208588528852838988205461021d828210156117d3565b83895260018a528a8920878a528a52038988205581875260018852888720838852885288872061024e858254611832565b905582858a51848152868b820152600080516020611a398339815191528c3392a43b610278578580f35b889587946102b98a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a483019061135c565b03925af1869181610378575b506103475750506001906102d76118a8565b6308c379a014610314575b506102f75750505b8180808381808080808580f35b5162461bcd60e51b815291508190610310908201611934565b0390fd5b61031c6118c6565b8061032757506102e2565b6103108591855193849362461bcd60e51b8552840152602483019061135c565b6001600160e01b03191603905061035f5750506102ea565b5162461bcd60e51b81529150819061031090820161185f565b610399919250843d86116103a0575b610391818361139c565b81019061183f565b90876102c5565b503d610387565b9492909897959391885b8651811015610443578b6103d0826103c9818b6116ec565b51926116ec565b5190808c5260208a81528b8d205491838310610401576103fc949392918c918f5252038a8c20556116c7565b6103b1565b8c5162461bcd60e51b8152808d0183905260286024820152600080516020611a59833981519152604482015267616c537570706c7960c01b6064820152608490fd5b50979950899895979395929450909290918a6101f2565b999694929098959391875b8c8b518210156104a357908b610482826103c98161049e966116ec565b518b52896020526104978c8c20918254611832565b90556116c7565b610465565b50509193959890929496996101ed565b5082885260026020908152868920338a5290528588205460ff166101bb565b5080fd5b5050346104d2576020906104e936611560565b50505050505163f23a6e6160e01b8152f35b5050346104d257806003193601126104d257610515611341565b6001600160a01b036024358181169290839003610550579360ff92849260209616825260028652828220908252855220541690519015158152f35b8480fd5b50903461018c57606036600319011261018c5761056f611341565b6001600160401b03916044358381116109d757366023820112156109d7576105a0903690602481880135910161144a565b9060019182600554019384600555848852602094600786528389209660018060a01b0393848416988960018060a01b031982541617905560088852858b20908051908382116109c4578c82916105f685546119be565b8c601f821161096f575b50508b91601f841160011461090e5792610903575b5050600019600383901b1c191690881b1790555b845190878201908111828210176108f057855289815287156108a357818a88926106548c9695611989565b94896024359661066388611989565b85835b610841575b505050508383528985528883208c8452855288832061068b878254611832565b90558b838a518681528888820152600080516020611a398339815191528c3392a43b61073b575b50505050505060065416948585146106fa5750838652600283528086208587528352808620805460ff191683179055519081526000805160206119f98339815191529190a380f35b83608492519162461bcd60e51b835282015260296024820152600080516020611a19833981519152604482015268103337b91039b2b63360b91b6064820152fd5b610777908851958694859463f23a6e6160e01b998a8752339087015260248601526044850152606484015260a0608484015260a483019061135c565b03818c8b5af1899181610822575b506107fc575050826107956118a8565b6308c379a0146107c7575b6107b0575b853885818a816106b2565b815162461bcd60e51b815280610310818901611934565b6107cf6118c6565b806107da57506107a0565b835162461bcd60e51b815280890187905290819061031090602483019061135c565b6001600160e01b031916146107a557815162461bcd60e51b81528061031081890161185f565b61083a919250873d89116103a057610391818361139c565b9038610785565b9193959790929496989984518310156108945790829161086461088294866116ec565b519161087084886116ec565b518b52526104978d8a20918254611832565b9183918f99989694938e989694610666565b9998969492819896945061066b565b845162461bcd60e51b8152808a01889052602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b634e487b7160e01b8b5260418a5260248bfd5b015190503880610615565b8581528c81208c9550929190601f198516908e5b828210610958575050841161093f575b505050811b019055610629565b015160001960f88460031b161c19169055388080610932565b8385015186558e979095019493840193018e610922565b9193509185815220601f840160051c81018c85106109bd575b918f92859492601f8e92930160051c01915b8281106109a95750508c610600565b809294919395505501918e918b859461099a565b5080610988565b634e487b7160e01b8d5260418c5260248dfd5b8580fd5b503461018c57602036600319011261018c57602092818392358252845220549051908152f35b5050346104d257602090610a14366114ae565b50505050505163bc197c8160e01b8152f35b50903461018c578060031936011261018c57610a40611341565b9060243591821515809303610550576001600160a01b031692338414610a9d5750338452600260205280842083855260205280842060ff1981541660ff8416179055519081526000805160206119f983398151915260203392a380f35b6020608492519162461bcd60e51b835282015260296024820152600080516020611a19833981519152604482015268103337b91039b2b63360b91b6064820152fd5b5050346104d257816003193601126104d257905490516001600160a01b039091168152602090f35b503461018c57602036600319011261018c57610b21611341565b91610b2a6115b5565b61011e6115b5565b8334610b77576020366003190112610b7757610b4c611341565b610b546115b5565b600680546001600160a01b0319166001600160a01b039290921691909117905580f35b80fd5b8334610b775780600319360112610b7757610b936115b5565b80546001600160a01b03198116825581906001600160a01b0316600080516020611a798339815191528280a380f35b503461018c57602036600319011261018c576020928183923582528452205415159051908152f35b503461018c578160031936011261018c5780356001600160401b038082116105505736602383011215610550578183013590610c25826113d5565b92610c328651948561139c565b82845260209260248486019160051b83010191368311610d8257602401905b828210610d5f575050506024359081116109d757610c7290369085016113ec565b928251845103610d0c5750815194610c89866113d5565b95610c968651978861139c565b808752610ca5601f19916113d5565b0136838801375b8251811015610cf657610cf190610ce16001600160a01b03610cce83876116ec565b5116610cda83886116ec565b5190611642565b610ceb82896116ec565b526116c7565b610cac565b845182815280610d088185018961152c565b0390f35b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b81356001600160a01b0381168103610d7e578152908401908401610c51565b8980fd5b8880fd5b509190346104d257610d97366114ae565b909692959390926001600160a01b039182169291338414801561111a575b610dbe90611716565b82518951036110c6578716938415610dd68115611779565b8415611072575b610fc8575b855b8351811015610e605780610dfb610e5b92866116ec565b51610e06828d6116ec565b5190808a5260016020918183528c8c208a8d528352838d8d8c8282205492610e30858510156117d3565b858352868852822091528552038d8d20558b5281528a8a2090898b52526104978a8a20918254611832565b610de4565b509293909691859892828689518a81527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb610e9d8c83018761152c565b91808303602082015280610eb233948b61152c565b0390a43b610ebe578580f35b8795610f1195610f20610efe956020978b51998a988997889663bc197c8160e01b9e8f89523390890152602488015260a0604488015260a487019061152c565b600319938487830301606488015261152c565b9184830301608485015261135c565b03925af1859181610fa8575b50610f925750506001610f3d6118a8565b6308c379a014610f5b575b6102f75750505b38808281808080808580f35b610f636118c6565b80610f6e5750610f48565b905061031091602094505193849362461bcd60e51b8552840152602483019061135c565b6001600160e01b0319160361035f575050610f4f565b610fc191925060203d81116103a057610391818361139c565b9038610f2c565b9691928596959491945b845181101561106357610fe581866116ec565b51610ff0828c6116ec565b5190808a526020888152898b2054918383106110215761101c949392918a918d525203888a20556116c7565b610fd2565b8a5162461bcd60e51b8152808b0183905260286024820152600080516020611a59833981519152604482015267616c537570706c7960c01b6064820152608490fd5b50929196959495939093610de2565b9792969594919390855b88518110156110b857806110936110b3928d6116ec565b5161109e828c6116ec565b518952876020526104978a8a20918254611832565b61107c565b509093919495969297610ddd565b865162461bcd60e51b8152602081840152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b508386526002602090815287872033885290528686205460ff16610db5565b50903461018c576020918260031936011261126457803580855260078452828520549091906001600160a01b03161561122f5750835260088252808320815193849181815490611188826119be565b928386526001928884821691826000146112055750506001146111c7575b8588610d08896111b8848a038561139c565b5192828493845283019061135c565b87945081939291528383205b8284106111ed57505050820101816111b8610d08386111a6565b8054848a0186015288955087949093019281016111d3565b60ff19168882015294151560051b870190940194508593506111b89250610d0891503890506111a6565b825162461bcd60e51b8152908101849052600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606490fd5b8380fd5b5050346104d257816003193601126104d2576020906005549051908152f35b503461018c57602036600319011261018c57359063ffffffff60e01b821680920361018c5760209250636cdb3d1360e11b8214918215611300575b82156112d2575b50519015158152f35b909150630271189760e51b81149081156112ef575b5090386112c9565b6301ffc9a760e01b149050386112e7565b6303a24d0760e21b811492506112c2565b5050346104d257806003193601126104d25760209061133a611331611341565b60243590611642565b9051908152f35b600435906001600160a01b038216820361135757565b600080fd5b919082519283825260005b848110611388575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611367565b601f909101601f19168101906001600160401b038211908210176113bf57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116113bf5760051b60200190565b81601f8201121561135757803591611403836113d5565b92611411604051948561139c565b808452602092838086019260051b820101928311611357578301905b82821061143b575050505090565b8135815290830190830161142d565b9192916001600160401b0382116113bf5760405191611473601f8201601f19166020018461139c565b829481845281830111611357578281602093846000960137010152565b9080601f83011215611357578160206114ab9335910161144a565b90565b60a0600319820112611357576001600160a01b039160043583811681036113575792602435908116810361135757916001600160401b039160443583811161135757826114fd916004016113ec565b926064358181116113575783611515916004016113ec565b92608435918211611357576114ab91600401611490565b90815180825260208080930193019160005b82811061154c575050505090565b83518552938101939281019260010161153e565b60a0600319820112611357576001600160a01b039160043583811681036113575792602435908116810361135757916044359160643591608435906001600160401b038211611357576114ab91600401611490565b6000546001600160a01b031633036115c957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080546001600160a01b039283166001600160a01b0319821681178355921690600080516020611a798339815191529080a3565b6001600160a01b031690811561166f57600052600160205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b6064820152608490fd5b60001981146116d65760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156117005760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b1561171d57565b60405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608490fd5b1561178057565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156117da57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b919082018092116116d657565b9081602091031261135757516001600160e01b0319811681036113575790565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d116118b557565b905060046000803e60005160e01c90565b600060443d106114ab57604051600319913d83016004833e81516001600160401b03918282113d6024840111176119235781840194855193841161192b573d8501016020848701011161192357506114ab9291016020019061139c565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b60408051919082016001600160401b038111838210176113bf5760405260018252602082016020368237825115611700575290565b90600182811c921680156119ee575b60208310146119d857565b634e487b7160e01b600052602260045260246000fd5b91607f16916119cd56fe17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31455243313135353a2073657474696e6720617070726f76616c20737461747573c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62455243313135353a206275726e20616d6f756e74206578636565647320746f748be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212204ed4ad4c62e75ee5fae2640525c1b1ec70a1af63fec7583915aba6d5add3e3ca64736f6c63430008110033";

type MultipleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultipleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultipleToken__factory extends ContractFactory {
  constructor(...args: MultipleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultipleToken> {
    return super.deploy(overrides || {}) as Promise<MultipleToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultipleToken {
    return super.attach(address) as MultipleToken;
  }
  override connect(signer: Signer): MultipleToken__factory {
    return super.connect(signer) as MultipleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultipleTokenInterface {
    return new utils.Interface(_abi) as MultipleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultipleToken {
    return new Contract(address, _abi, signerOrProvider) as MultipleToken;
  }
}
