/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "activityId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "activityId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "endBlockNumber",
        type: "uint256",
      },
    ],
    name: "CreateActivity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "activityId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "activityId",
        type: "uint256",
      },
    ],
    name: "WithdrawPrize",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "acitivityExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "acitivityPrizeTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_endBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "createActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
    ],
    name: "getActivityInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "organizer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "activityId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContractAddress",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "endBlockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct NftLottery.ActivityInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
    ],
    name: "getRemainingTokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "organizerActivityInfo",
    outputs: [
      {
        internalType: "address",
        name: "organizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "activityId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endBlockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_activityId",
        type: "uint256",
      },
    ],
    name: "withdrawPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611883908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816312d18ed614610fc857508063150b7a0214610f50578063183d506d14610f2157806318712c2114610de65780634b4e5be714610d9e578063551512de14610c685780636c40ad7014610b2a578063715018a614610ad457806379ba509714610a4c5780637ab4d0fd1461060b5780638129fc1c146104d95780638da5cb5b146104b0578063a894c45714610481578063c20eec7b14610276578063e0f4b54e146101e0578063e30c3978146101b7578063f2fde38b146101495763f9b70fea146100e757600080fd5b3461014657602036600319011261014657604060a0916004358152609760205220600180831b03808254169160018101549160028201541660056004830154920154926040519485526020850152604084015260608301526080820152f35b80fd5b503461014657602036600319011261014657610163611393565b61016b61145f565b606580546001600160a01b0319166001600160a01b039283169081179091556033549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b50346101465780600319360112610146576065546040516001600160a01b039091168152602090f35b5034610146576040366003190112610146576101fa611393565b6040519061020782611563565b60018060a01b0316815261022360209160243583820152611674565b8252609a8152610235604083206117c8565b60405192828493840190808552835180925280604086019401925b82811061025f57505050500390f35b835185528695509381019392810192600101610250565b50346101465760208060031936011261047d576004356001916102a58361029d84336116be565b15151461173f565b6102c16040516102b481611563565b3381528383820152611674565b8085526097825260408520604051906102d982611594565b80546001600160a01b03908116835286820154858401526002820154811660408401908152926003926005906103108582016117c8565b606084015260048101546080840152015460a082015281339151160361042c5790879291848452609a8652604084209261034c84541515611517565b84895b610391575b8589609a8a8a845252610369604083206115fc565b337fa73ef00cf3770008853149621e0eef4bdb15b3215395affcd01b8f60cc58ae298380a380f35b845481101561042757828251166103a882876113ef565b905490861b1c90803b1561042357604051632142170760e11b815291889183918290849082906103dd9033306004850161171d565b03925af1908115610418578791610400575b50506103fa906116f8565b8961034f565b610409906115af565b6104145785386103ef565b8580fd5b6040513d89823e3d90fd5b8780fd5b610354565b60405162461bcd60e51b815260048101869052602360248201527f206f6e6c79206f7267616e697a65722063616e2077697468647261772070726960448201526203d32960ed1b6064820152608490fd5b5080fd5b50346101465760203660031901126101465760ff60406020926004358152609984522054166040519015158152f35b50346101465780600319360112610146576033546040516001600160a01b039091168152602090f35b5034610146578060031936011261014657805460ff8160081c1615908180926105fe575b80156105e7575b1561058b5760ff19811660011783558161057a575b5061053360ff835460081c1661052e816114b7565b6114b7565b61053c3361141d565b6105435780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117825538610519565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105045750600160ff821614610504565b50600160ff8216106104fd565b503461014657608036600319011261014657610625611393565b6064356001600160401b038111610a48576106449036906004016113bf565b91906001600160a01b03821615610a03574360243511156109995761066a831515611517565b610676604435336116be565b6109595760405161068681611594565b33815260443560208201526001600160a01b03831660408201526106a9846115e5565b6106b660405191826115c2565b84815260208101368660051b8501116109555783905b8660051b85018210610945575050606082015260243560808201528460a0820152845b8481106108c6575061071660405161070681611563565b3381526044356020820152611674565b808652609760209081526040808820845181546001600160a01b03199081166001600160a01b03928316178355938601516001830155918501516002820180549094169216919091179091556060830151805192939192906001600160401b0382116108b2576020600385019161078d8484611631565b0190895260208920895b83811061089e57505050506080810151600483015560a00151600590910155808552609a602052604085206001600160401b03851161088a576107da8582611631565b85526020852082865b868110610876575050508452609860209081526040808620805460ff1916600117905580516001600160a01b03909416845290830181905282018390526001600160fb1b038311610872578260051b906060830137602435917feece7c57cc04066794eda97475dec1084a86f44d0b254b7fc9f4ec0ae1cb11ed60443592606081339460051b8101030190a480f35b8380fd5b6001906020833593019281850155016107e3565b634e487b7160e01b86526041600452602486fd5b600190602084519401938184015501610797565b634e487b7160e01b89526041600452602489fd5b6001600160a01b0384163b156104145785604051632142170760e11b81528181806108fc8660051b89013530336004850161171d565b0381836001600160a01b038b165af1801561093a57610926575b5050610921906116f8565b6106ef565b61092f906115af565b610414578538610916565b6040513d84823e3d90fd5b81358152602091820191016106cc565b8680fd5b60405162461bcd60e51b815260206004820152601860248201527701030b1ba34bb34ba3c9030b63932b0b23c9032bc34b9ba160451b6044820152606490fd5b60405162461bcd60e51b815260206004820152603c60248201527f20656e64426c6f636b4e756d6265722073686f756c642062652067726561746560448201527b039103a3430b71031bab93932b73a10313637b1b590373ab6b132b9160251b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f206e6674436f6e747261637441646472657373206973206e6f74207a65726f006044820152606490fd5b8280fd5b5034610146578060031936011261014657606554336001600160a01b0390911603610a7d57610a7a3361141d565b80f35b60405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b5034610146578060031936011261014657610aed61145f565b606580546001600160a01b03199081169091556033805491821690556000906001600160a01b031660008051602061182e8339815191528280a380f35b503461014657604036600319011261014657610b44611393565b604051610b5081611594565b8281528260a060209282848201528260408201526060808201528260808201520152610b9a604051610b8181611563565b6001600160a01b03938416815260243583820152611674565b835260978152604083209160405192610bb284611594565b8181541684526001948582015494848101958652836002840154169360408201948552610be1600385016117c8565b906060830191825260056004860154956080850196875201549560a0840196875260405198888a528260e08b01955116898b01525160408a015251166060880152519460c0608088015285518092528061010088019601925b828110610c5557845160a0890152855160c089015287870388f35b8351875295810195928101928801610c3a565b503461014657606036600319011261014657610c82611393565b61029d6024359183610c926113a9565b93610c9b61145f565b604051610ca781611563565b6001600160a01b0384811682526020820183905290610cc590611674565b95610cd5600180978195886116be565b868452609a602052610ce9604085206117c8565b91610cf683511515611517565b849116925b610d15575b83878152609a602052610a7a604082206115fc565b8151811015610d9957610d288183611819565b51833b15610d955784610d519160405180938192632142170760e11b83528a306004850161171d565b038183885af1908115610d8a578591610d76575b5050610d70906116f8565b85610cfb565b610d7f906115af565b610872578338610d65565b6040513d87823e3d90fd5b8480fd5b610d00565b503461014657604036600319011261014657602435906004358152609a60205260408120908154831015610146576020610dd884846113ef565b90546040519160031b1c8152f35b5034610146576040366003190112610146576004356024358015610ee257610e13600161029d84336116be565b610e30604051610e2281611563565b338152836020820152611674565b83526097602052604083208054336001600160a01b0390911603610e9157817f48211a20c285b6b077b7917b8bb118eaa92efdfb8fa2e3b114ffa253e0b665ae92600583610e85600460209601544310611787565b0155604051908152a280f35b60405162461bcd60e51b8152602060048201526024808201527f206f6e6c79206f7267616e697a65722063616e20736574206d65726b6c652072604482015263037b7ba160e51b6064820152608490fd5b60405162461bcd60e51b8152602060048201526017602482015276206d65726b6c65526f6f74206973206e6f74207a65726f60481b6044820152606490fd5b50346101465760203660031901126101465760ff60406020926004358152609884522054166040519015158152f35b503461014657608036600319011261014657610f6a611393565b506024356001600160a01b03811603610fc3576064356001600160401b03808211610a485736602383011215610a48578160040135908111610a48573691016024011161014657604051630a85bd0160e11b8152602090f35b600080fd5b90503461047d5760a036600319011261047d57610fe3611393565b90610fec6113a9565b608435929091906001600160401b038411610d9557611047600161029d61101a61103d9736906004016113bf565b97909561102681611563565b838060a01b03861681526024356020820152611674565b93602435906116be565b8085526097602052604085206110b66040519161106383611594565b80546001600160a01b039081168452600182015460208501526002820154166040840152611093600382016117c8565b606084015260a06005600483015492836080870152015493019283524310611787565b818652609960205260ff60408720541661134f57519360405160208101903360601b8252601481526110e781611563565b519020906110f4816115e5565b9361110260405195866115c2565b8185526020850190368360051b82011161134b5780915b8360051b8201831061133b57505050509285935b8351851015611175576111408585611819565b51908181101561116357875260205261115d604087205b946116f8565b9361112d565b90875260205261115d60408720611157565b86935085036112f6576001600160a01b031690813b15610a4857604051632142170760e11b81528381606435948183816111b48933306004850161171d565b03925af180156112eb576112d8575b508252609960205260408220600160ff19825416179055609a6020526040822090825b8254808210156112cf57826111fb83866113ef565b90549060031b1c146112165750611211906116f8565b6111e6565b919290600019928381019081116112bb5761123461124291846113ef565b90549060031b1c91836113ef565b819291549060031b85811b9283911b16911916179055805480156112a75782019161126d83836113ef565b909182549160031b1b19169055555b602435337f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a8480a480f35b634e487b7160e01b85526031600452602485fd5b634e487b7160e01b86526011600452602486fd5b5050905061127c565b6112e4909391936115af565b91836111c3565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601d60248201527f41697264726f703a20496e76616c6964206d65726b6c652070726f6f660000006044820152606490fd5b8235815260209283019201611119565b8880fd5b60405162461bcd60e51b815260206004820152601c60248201527b0103cb7bab910383934bd329030b63932b0b23c9031b630b4b6b2b2160251b6044820152606490fd5b600435906001600160a01b0382168203610fc357565b604435906001600160a01b0382168203610fc357565b9181601f84011215610fc3578235916001600160401b038311610fc3576020808501948460051b010111610fc357565b80548210156114075760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b606580546001600160a01b0319908116909155603380549182166001600160a01b03938416908117909155911660008051602061182e833981519152600080a3565b6033546001600160a01b0316330361147357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156114be57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561151e57565b60405162461bcd60e51b815260206004820152601e60248201527f20746f6b656e4964732073686f756c64206e6f7420626520656d7074792000006044820152606490fd5b604081019081106001600160401b0382111761157e57604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761157e57604052565b6001600160401b03811161157e57604052565b601f909101601f19168101906001600160401b0382119082101761157e57604052565b6001600160401b03811161157e5760051b60200190565b8054906000908181558261160f57505050565b815260208120918201915b82811061162657505050565b81815560010161161a565b600160401b821161157e5780549180825582811061164e57505050565b60009182526020822092830192015b82811061166957505050565b81815560010161165d565b8051602091820151604051606092831b6001600160601b0319169381019384526034808201929092529081529081016001600160401b0381118282101761157e5760405251902090565b6116e491604051916116cf83611563565b6001600160a01b031682526020820152611674565b600052609860205260ff6040600020541690565b60001981146117075760010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03918216815291166020820152604081019190915260600190565b1561174657565b60405162461bcd60e51b815260206004820152601960248201527801030b1ba34bb34ba3c903237b2b9903737ba1032bc34b9ba1603d1b6044820152606490fd5b1561178e57565b60405162461bcd60e51b815260206004820152601260248201527101030b1ba34bb34ba3c9034b99037bb32b9160751b6044820152606490fd5b9060405191828154918282526020928383019160005283600020936000905b8282106117ff575050506117fd925003836115c2565b565b8554845260019586019588955093810193909101906117e7565b80518210156114075760209160051b01019056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220b59ba8c21d673f00be25fdff4e0ad25a4a9dcbb3ff60a077783f39ddc1f3559564736f6c63430008110033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  override connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
