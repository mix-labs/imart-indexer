datasource db {
    // could be postgresql or mysql
    provider = "mysql"
    url      = env("DB_URL")
}

generator client {
    provider             = "prisma-client-py"
    recursive_type_depth = 5
    previewFeatures      = ["interactiveTransactions"]
}

enum Chain {
    IC
    FLOW
    APTOS
}

enum MetadataType {
    VIDEO
    MUSIC
    IMAGE
    SPACE
    OTHER
}

enum OrderStatus {
    LISTING
    SOLD
    CANCELED
}

enum OfferStatus {
    CREATED
    ACCEPTED
    CANCELED
}

enum TxType {
    LIST
    UPDATE
    CANCEL
    SALE
}

enum SaleStatus {
    UNAUDITED
    UPCOMING
    LIVE
    ENDED
}

model Community {
    id           String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    name         String
    icon         String
    link         String
    Collection   Collection? @relation(fields: [collectionId], references: [id])
    collectionId String?     @db.VarChar(64)
}

model Sale {
    id               String     @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    status           SaleStatus
    publicMintTime   DateTime
    expirationTime   DateTime?
    title            String
    description      String
    mintingEnabled   Boolean    @default(false)
    tokenSupply      String     @default("0") @db.VarChar(78)
    mintedTokenCount String     @default("0") @db.VarChar(78)
    mintPrice        String     @default("0") @db.VarChar(78)
    mintPayload      String
    collectionId     String     @db.VarChar(64)
    collection       Collection @relation(fields: [collectionId], references: [id])

    @@index([status])
}

model Comment {
    id           String   @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    collectionId String   @db.VarChar(64)
    tokenId      String   @db.VarChar(64)
    address      String   @db.VarChar(66)
    content      String   @db.VarChar(400)
    createTime   DateTime

    @@index([address, collectionId, tokenId])
}

model User {
    id          String  @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    address     String
    publicKey   String? @default("")
    name        String? @default("")
    logo        String? @default("")
    cover       String? @default("")
    description String? @default("")
    character   String? @default("")

    @@index([address])
    @@index([publicKey])
}

model Collection {
    id           String       @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    chain        Chain
    metadataType MetadataType
    category     String
    contractName String
    contract     String       @default("")
    name         String
    creator      String
    description  String       @db.VarChar(400)
    cover        String?      @default("")
    logo         String?      @default("")
    maximum      String       @default("0") @db.VarChar(78)
    volume       String       @default("0") @db.VarChar(78)
    floorPrice   String?      @default("0") @db.VarChar(78)
    uri          String?      @default("")
    supply       String       @default("0") @db.VarChar(78)
    communities  Community[]
    Sale         Sale[]

    @@unique([chain, creator, name])
    @@index([chain])
    @@index([category])
    @@index([metadataType])
    @@index([chain, category])
    @@index([chain, metadataType])
}

//**************************************************************************************************
// Aptos
//**************************************************************************************************
model AptosOrder {
    id           String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    collectionId String      @db.VarChar(64)
    seller       String      @db.VarChar(66)
    buyer        String?     @db.VarChar(66)
    price        String      @default("0") @db.VarChar(78)
    quantity     String      @default("1") @db.VarChar(78)
    currency     String      @default("")
    status       OrderStatus
    createTime   DateTime
    seqno        String      @default("0") @db.VarChar(78)
    token        AptosToken? @relation(fields: [tokenId], references: [id])
    tokenId      String?     @db.VarChar(64)

    @@unique([tokenId, seller, status, createTime])
    @@index([collectionId])
    @@index([tokenId])
    @@index([collectionId, tokenId])
    @@index([status])
    @@index([seller])
}

model AptosToken {
    id              String       @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    collectionId    String       @db.VarChar(64)
    owner           String       @default("")
    creator         String       @default("")
    collection      String       @default("")
    name            String       @default("")
    description     String       @default("")
    uri             String       @default("")
    propertyVersion String       @default("0")
    seqno           String       @default("0") @db.VarChar(78)
    AptosOrder      AptosOrder[]

    @@unique([creator, name, collection, propertyVersion])
    @@index([collectionId])
    @@index([owner])
}

model AptosOffer {
    id           String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    tokenId      String      @db.VarChar(64)
    collectionId String      @db.VarChar(64)
    price        String      @default("0") @db.VarChar(78)
    currency     String
    quantity     String?     @default("1") @db.VarChar(78)
    openedAt     DateTime
    endedAt      DateTime
    offerer      String
    status       OfferStatus

    @@unique([tokenId, openedAt, offerer, status])
    @@index([tokenId])
    @@index([offerer])
}

model AptosActivity {
    id           String   @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
    orderId      String?  @db.VarChar(64)
    tokenId      String   @db.VarChar(64)
    collectionId String   @db.VarChar(64)
    source       String?  @default("") @map("from")
    destination  String?  @default("") @map("to")
    txHash       String?  @default("")
    txType       TxType
    quantity     String?  @default("1") @db.VarChar(78)
    price        String?  @default("0") @db.VarChar(78)
    txTimestamp  DateTime

    @@index([collectionId])
    @@index([txType])
    @@index([tokenId])
    @@index([tokenId, txType, txTimestamp])
    @@index([collectionId, txType, txTimestamp])
}

model EventOffset {
    id                          Int    @id @default(0)
    buy_event_excuted_offset    BigInt
    list_event_excuted_offset   BigInt
    delist_event_excuted_offset BigInt
    create_offer_excuted_offset BigInt @default(-1)
    accept_offer_excuted_offset BigInt @default(-1)
    cancel_offer_excuted_offset BigInt @default(-1)
    create_token_excuted_offset BigInt @default(-1)
}
